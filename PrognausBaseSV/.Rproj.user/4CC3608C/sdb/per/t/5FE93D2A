{
    "collab_server" : "",
    "contents" : "#'@title Dominant height according to Assmann\n#'\n#'@description \\code{OH.Ass} calculates the dominant height\n#'of 100 largest trees per hectare in m\n#'@details\n#'Calculates the dominant height according to Assmann as Lorey's mean\n#'height, dominant height is calculated independent of the tree species.\n#'Missing dominant heights are imputed using the quotients between tree\n#'species from Vospernik (2000).\n#'Function not suitable for full cruise!!!!\n#'@param ID Unique ID for each sample plot\n#'@param BART Tree species,\n#'coding=\\href{https://homepage.boku.ac.at/sonja/ANFI_E.pdf}{ANFI},\n#'default=1 Norway spruce\n#'@param BHD_cm dbh in cm\n#'@param nrep represented stem number, default=1, data is not from\n#'a sample, i.e. each tree represents 1 tree per hectare\n\nOH.Ass<-function(ID_Punkt=1, BART=1, BHD_cm, Hoehe_m, nrep){\n\n  dat<-data.frame(\"ID_Punkt\"=ID_Punkt, \"BART\"=BART, \"BHD\"=BHD_cm,\n                  \"Hoehe\"=Hoehe_m,\"nrep\"=nrep)\n  temp<-dat\n\n  ###################################################################\n  #Auswahl der Oberhöhenstämme\n  ###################################################################\n\n  #Nach Probefläche und BHD sortieren\n  temp<-temp[order(temp$ID_Punkt, -temp$BHD),]\n  temp$n_cum<-ave(temp$nrep,by=list(temp$ID_Punkt),\n                  FUN=cumsum) #Kumulative Summe von n\n  temp$OHja<-ifelse(temp$n_cum<=100,1,0) #Alle wo kumulative Summe < 100\n  temp$nrepOH<-temp$OHja*temp$nrep #Nrep für alle, wo kumulative Summe < 100\n\n  #nrep der letzten Klasse berechnen\n  for(i in 2:nrow(temp)){\n      if(temp$OHja[i-1]==1 & temp$OHja[i]==0){\n        temp$nrepOH[i]<-100-temp$n_cum[i-1]\n      }\n  }\n\n  temp1<-subset(temp, nrepOH>0, select=c(\"ID_Punkt\", \"BART\",\n                                          \"BHD\", \"Hoehe\", \"nrepOH\"))\n\n  #################################################################\n  #Berechnung der Oberhöhe als Lorey'sche Mittelhöhe der 100\n  #stärksten Stämme\n  #################################################################\n\n  temp1$n_g<-(temp1$BHD/100)^2*pi/4*temp1$nrepOH #n*g\n  temp1$n_g_h<-temp1$n_g*temp1$Hoehe #n*g*h\n\n  sumNG<-aggregate(temp1$n_g, by=list(temp1$ID_Punkt,temp1$BART), FUN=sum)\n  sumNGH<-aggregate(temp1$n_g_h, by=list(temp1$ID_Punkt,temp1$BART), FUN=sum)\n\n  colnames(sumNG)<-c(\"ID_Punkt\",\"BART\",\"sumNG\")\n  colnames(sumNGH)<-c(\"ID_Punkt\",\"BART\",\"sumNGH\")\n\n  tempOH<-merge(sumNG, sumNGH, by.x=c(\"ID_Punkt\",\"BART\"),\n                by.y=c(\"ID_Punkt\",\"BART\"))\n  tempOH$OH<-tempOH$sumNGH/tempOH$sumNG\n  tempOH$ID_Punkt<-as.numeric(tempOH$ID_Punkt)\n\n  #####################################################################\n  #Ergänzung fehlender Oberhöhen\n  ####################################################################\n\n  #Alle im Datensatz vorkommenden Probeflächen-Baumartenkombinationen\n  temp3<-unique(subset(dat, select=c(\"ID_Punkt\", \"BART\")))\n\n  tempOH1<-merge(temp3,\n                 tempOH[,c(\"ID_Punkt\",\"BART\",\"OH\")],\n                 by.x=c(\"ID_Punkt\",\"BART\"),\n                 by.y=c(\"ID_Punkt\",\"BART\"),\n                 all.x=TRUE)\n\n  tempOH1$OH_ja<-ifelse(is.na(tempOH1$OH),0,1)\n\n  tempOH1<-tempOH1[order(tempOH1$ID_Punkt,-tempOH1$OH_ja, -tempOH1$BART),]\n\n  for(i in 1:nrow(tempOH1)){\n\n    if(!is.na(tempOH1$OH[i])){#Wenn Oberhöhe vorhanden an temp Variable zuweisen\n      tempBA<-tempOH1$BART[i]\n      tempOH<-tempOH1$OH[i]\n    }\n\n    if(is.na(tempOH1$OH[i])){#Wenn Oberhöhe fehlt, aus tempVariablen und\n      #OH Funktionen zuweisen\n\n    if(tempBA==1) CODE<-'A'\n    if(tempBA==2) CODE<-'B'\n    if(tempBA==3) CODE<-'C'\n    if(tempBA %in% c(4:6)) CODE<-'D'\n    if(tempBA==10 | tempBA>11) CODE<-'E'\n    if(tempBA==11) CODE<-'F'\n\n    switch(CODE,\n           A={tempOH1$OH[i]<-OHQFi(tempOH, tempOH1$BART[i])\n           },\n           B={tempOH1$OH[i]<-OHQTa(tempOH, tempOH1$BART[i])\n           },\n           C={tempOH1$OH[i]<-OHQLa(tempOH, tempOH1$BART[i])\n           },\n           D={tempOH1$OH[i]<-OHQKi(tempOH, tempOH1$BART[i])\n           },\n           E={tempOH1$OH[i]<-OHQBu(tempOH, tempOH1$BART[i])\n           },\n           F={tempOH1$OH[i]<-OHQEi(tempOH, tempOH1$BART[i])\n           }\n    )#End switch\n  } #End if\n}#End for\n\n  ##################################################################\n  #Oberhöhen an Originaldatensatz anbinden\n  ##################################################################\n  dat1<-merge(dat, tempOH1[,c(\"ID_Punkt\", \"BART\", \"OH\")],\n              by.x=c(\"ID_Punkt\", \"BART\"),\n              by.y=c(\"ID_Punkt\", \"BART\"), all.x=TRUE, sort=FALSE)\n\n\n  OH<-dat1$OH\n}#Ende Oberhöhenberechnung\n\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Fichte\nOHQFi<-function(OH_m, BART, Seehoehe_m=NA, Hangneigung_Proz=NA,\n                  Bodenfeuchte=NA,Gha=NA) {\n\n  Seehoehe=Seehoehe_m/100\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*1\n         },\n         #Tanne\n         B={OH_neu<-OH_m*0.95\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1.02\n            # if(!is.na(Seehoehe) & !is.na(Bodenfeuchte)){\n            #   D_Bf<-ifelse(Bodenfeuchte %in% c(1:3),0,1)\n            #   OH_neu<-OH_m*(1.212-0.00620*OH_m-0.00024*Seehoehe^2-0.05800*D_Bf)\n            # }\n          },\n         #Kiefer,Schwarzkiefer,Zirbe\n         D={OH_neu<-OH_m*0.98\n            # if(!is.na(Seehoehe) & !is.na(Gha)){\n            #   OH_neu<-OH_m*(1.119-0.00730*OH_m-0.00720*Seehoehe-0.00099*Gha)\n            # }\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-OH_m*0.91\n          # if(!is.na(Seehoehe) & !is.na(Hangneigung_Proz)){\n          #   OH_neu<-OH_m*(1.166-0.00550*OH_m-0.01100*Seehoehe-0.000008*Hangneigung_Proz^2)\n          # }\n        },\n         #Eiche\n         F={OH_neu<-OH_m*0.87\n         }\n  )\n\n}\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Tanne\nOHQTa<-function(OH_m, BART, Seehoehe_m=NA, Hangneigung_Proz=NA,\n                Bodenfeuchte=NA,Gha=NA) {\n\n  Seehoehe=Seehoehe_m/100\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*1.05\n         },\n         #Tanne\n         B={OH_neu<-OH_m*1.00\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1.02*1.05\n         # if(!is.na(Seehoehe) & !is.na(Bodenfeuchte)){\n         #   D_Bf<-ifelse(Bodenfeuchte %in% c(1:3),0,1)\n         #   OH_neu<-1.05*OH_m*(1.212-0.00620*OH_m-0.00024*Seehoehe^2-0.05800*D_Bf)\n         # }\n        },\n         #Kiefer,Schwarzkiefer,Zirbe\n         D={OH_neu<-1.05*OH_m*0.98\n         # if(!is.na(Seehoehe) & !is.na(Gha)){\n         #   OH_neu<-1.05*OH_m*(1.119-0.00730*OH_m-0.00720*Seehoehe-0.00099*Gha)\n         # }\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-1.05*OH_m*0.91\n         # if(!is.na(Seehoehe) & !is.na(Hangneigung_Proz)){\n         #  OH_neu<-1.05*OH_m*(1.166-0.00550*OH_m-0.01100*Seehoehe-0.000008*Hangneigung_Proz^2)\n         #  }\n         },\n         #Eiche\n         F={OH_neu<-1.05*OH_m*0.87\n         }\n  )\n\n}\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Lärche\nOHQLa<-function(OH_m, BART, Seehoehe_m=600, Hangneigung_Proz=50) {\n\n  Seehoehe=Seehoehe_m/100\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*0.98\n         },\n         #Tanne\n         B={OH_neu<-OH_m*0.92\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1\n         },\n         #Kiefer,Schwarzkiefer,Zirbe\n         D={OH_neu<-OH_m*0.89\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-OH_m*0.92\n         # if(!is.na(Seehoehe) & !is.na(Hangneigung_Proz)){\n         #   OH_neu<-OH_m*(0.961-0.00180*Seehoehe^2-0.0000249*Hangneigung_Proz^2)\n         #  }\n         },\n         #Eiche\n         F={OH_neu<-OH_m*0.92\n         }\n  )\n\n}\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Kiefer,\n#Schwarzkiefer oder Zirbe\nOHQKi<-function(OH_m, BART) {\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*1.02\n         },\n         #Tanne\n         B={OH_neu<-OH_m*0.97\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1.12\n         },\n         #Kiefer aus anderer Kiefer\n         D={OH_neu<-OH_m*1.00\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-OH_m*0.98\n         },\n         #Eiche\n         F={OH_neu<-OH_m*1.01\n         }\n\n  )\n\n}\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Buche\n#oder sonstigem Laubholz\nOHQBu<-function(OH_m, BART) {\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*1.10\n         },\n         #Tanne\n         B={OH_neu<-OH_m*1.04\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1.09\n         },\n         #Kiefer\n         D={OH_neu<-OH_m*1.025\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-OH_m*1\n         },\n         #Eiche\n         F={OH_neu<-OH_m*0.98\n         }\n  )\n\n}\n\n\n#Berechnet die Oberhöhe einer anderen Baumart aus der Oberhöhe von Eiche\nOHQEi<-function(OH_m, BART) {\n\n  if(BART==1) CODE<-'A'\n  if(BART==2) CODE<-'B'\n  if(BART==3) CODE<-'C'\n  if(BART %in% c(4:6)) CODE<-'D'\n  if(BART==10 | BART>11) CODE<-'E'\n  if(BART==11) CODE<-'F'\n\n  switch(CODE,\n         #Fichte\n         A={OH_neu<-OH_m*1.14\n         },\n         #Tanne\n         B={OH_neu<-OH_m*1.08\n         },\n         #Lärche\n         C={OH_neu<-OH_m*1.09\n         },\n         #Kiefer,Schwarzkiefer,Zirbe\n         C={OH_neu<-OH_m*0.99\n         },\n         #Buche,sonstiges Laubholz\n         E={OH_neu<-OH_m*1.02\n         },\n         #Eiche\n         F={OH_neu<-OH_m*1.00\n         }\n\n  )\n\n}\n\n\n",
    "created" : 1489507152134.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1912791352",
    "id" : "5FE93D2A",
    "lastKnownWriteTime" : 1490191349,
    "last_content_update" : 1490191349559,
    "path" : "C:/Eigene_Dateien/AaLehre/BWS_StatGrow/Prognaus_R/PrognausBaseSV/R/OH.R",
    "project_path" : "R/OH.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}