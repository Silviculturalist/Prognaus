{
    "collab_server" : "",
    "contents" : "#'@title Open grown tree crown diameter\n#'\n#'@description \\code{SD.P} calculates the crown diameter of open-grown trees in m\n#'\n#'@details\n#'The model is based on Hasenauer (1997).\n#'For full references see\n#'\\url{https://homepage.boku.ac.at/sonja/Lit_Prog.pdf}.\n#'Coding of tree species uses the coding of the\n#'Austrian National Forest Inventory\n#'(\\href{https://homepage.boku.ac.at/sonja/ANFI_E.pdf}{ANFI}).\n#'\n#'@param BART Tree species,\n#'coding=\\href{https://homepage.boku.ac.at/sonja/ANFI_E.pdf}{ANFI},\n#'default=1 Norway spruce\n#'@param BHD_cm dbh in cm\n#'@param MSE_ja Dummy variable, default=0, if 1 half of the model MSE is\n#'added to correct for logarithmic transformation bias\n\nSD.P<-function(BART=1, BHD_cm, MSE_ja=0){\n\nif (BART==1) {#Fichte\n  b0 = -0.3232\n  b1 = 0.6441\n  MSE = 0.026\n}\n\nif (BART==2) {#Tanne\n  b0 = 0.092\n  b1 = 0.538\n  MSE = 0.03\n}\n\nif (BART==3) {#Lärche\n  b0 = -0.3396\n  b1 = 0.6823\n  MSE = 0.035\n}\n\nif (BART==4) {#Kiefer\n  b0 = -0.1797\n  b1 = 0.6267\n  MSE = 0.037\n}\n\nif (BART==5) {#Schwarzkiefer\n  b0 = -0.157\n  b1 = 0.631\n  MSE = 0.019\n}\n\nif (BART==6) {#Zirbe\n  b0 = -1.3154\n  b1 = 0.8288\n  MSE = 0.2\n}\n\nif (BART==10) {#Buche\n  b0 = 0.2662\n  b1 = 0.6072\n  MSE = 0.058\n}\n\nif (BART==11) {#Eiche\n  b0 = -0.3973\n  b1 = 0.7328\n  MSE = 0.038\n}\n\nif (BART==13) {#Esche\n  b0 = 0.1366\n  b1 = 0.6183\n  MSE = 0.051\n}\n\nif (BART==14) {#Ahorn\n  b0 = 0.418\n  b1 = 0.5285\n  MSE = 0.025\n}\n\nif (BART==20|BART==28) {#Birke\n  b0 = 0.1783\n  b1 = 0.5665\n  MSE = 0.025\n}\n\nSD.Prog = exp(b0 + b1 * log(BHD_cm) + 0.5 * MSE * MSE_ja)\n}\n\nSD.P<-Vectorize(SD.P)\n\n#'@title Open-grown tree crown area\n#'\n#'@description \\code{EZ} calculates the represented open-grown tree crown area\n#'in m²\n#'\n#'@details\n#'Calculates the represented open-grown crown area from an open-grown tree\n#'diameter \\code{\\link{SD.P}} assuming circular crown areas and multiplies\n#'them by the represented stem number (e.g. in fixed area plots or\n#'angle count samples)\n#'@param SD_m Diameter of an open-grown tree in meter\n#'@param nrep represented stem number, default=1, data is not from\n#'a sample, i.e. each tree represents 1 tree per hectare\n#'\nEZ<-function(SD_m, nrep=1){\n#Berechnet eine kreisförmige Einflusszone um den Durchmesser\n  SR_m = SD_m / 2\n  Einflusszonen = SR_m * SR_m * pi * nrep\n}\n\nEZ<-Vectorize(EZ)\n\n#'@title Crown competition factor\n#'\n#'@description \\code{CCF.P} calculates the crown competition factor\n#'\n#'@details\n#'Calculates the crown competition factor according to Krajicek et al. (1961)\n#'using the open-grown tree diameter functions developed\n#'by Hasenauer (1997) \\code{\\link{SD.P}}.Circular crown areas are assumed\n#'and multiplied by the represented stem number (e.g. in fixed area plots or\n#'angle count samples)\n#'@param ID Unique ID for each sample plot\n#'@param BART Tree species,\n#'coding=\\href{https://homepage.boku.ac.at/sonja/ANFI_E.pdf}{ANFI},\n#'default=1 Norway spruce\n#'@param BHD_cm dbh in cm\n#'@param nrep represented stem number, default=1, data is not from\n#'a sample, i.e. each tree represents 1 tree per hectare\n#'@param MSE_ja Dummy Variable, default=0, if 1 half of the model MSE is\n#'added to correct for logarithmic transformation bias in the crown diameter\n#'model\n\n##!Achtung!!!! Kein Vectorize!!! erzeugt hier Unfug!!!!!\nCCF.P<-function(ID_Punkt=1, BART=1, BHD_cm, nrep=1, MSE_ja=0){\n\n  SolD<-SD.P(BART,BHD_cm,MSE_ja)\n  Crownc<-EZ(SolD,nrep)\n  dat <- data.frame(\"Crownc\"=Crownc, \"ID_Punkt\"=ID_Punkt)\n  dat1<-aggregate(dat$Crownc, by=list(dat$ID_Punkt), FUN=sum)\n  dat2<-merge(dat, dat1, by.x=\"ID_Punkt\", by.y=\"Group.1\", sort=\"FALSE\")\n  dat2$CCF<-dat2$x/100\n  CCF<-dat2$CCF\n  }\n\n#'@title Basal area of larger trees\n#'\n#'@description \\code{BAL.P} calculates the basal area of larger trees in m²/ha\n#'\n#'@details\n#'Calculates the basal area of larger trees according to Wykoff 1990.\n#'@param ID_Punkt Unique ID for each sample plot\n#'@param ID_Baum Unique ID for each tree within a plot\n#'@param BHD_cm dbh in cm\n#'@param G_m2ha represented basal area in m²/ha\n\nBAL.P<-function(ID_Punkt=1, ID_Baum, BHD_cm, G_m2ha){\n  dat<-data.frame(\"ID_Punkt\"=ID_Punkt, \"ID_Baum\"=ID_Baum, \"BHD\"=BHD_cm,\n                  \"Gha\"=G_m2ha)\n  temp<-dat\n  #Nach Probefläche und BHD sortieren\n  temp<-temp[order(temp$ID_Punkt, -temp$BHD),]\n  temp$BAL<-ave(temp$Gha,by=list(temp$ID_Punkt),\n                 FUN=function(x) c(0, cumsum(x)[1:length(x)-1]))\n\n  dat1<-merge(dat, temp[,c(\"ID_Punkt\", \"ID_Baum\", \"BAL\")],\n              by.x=c(\"ID_Punkt\", \"ID_Baum\"),\n              by.y=c(\"ID_Punkt\", \"ID_Baum\"), sort=FALSE)\n\n  BAL<-dat1$BAL\n\n}\n\n\n",
    "created" : 1488877204568.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3740942137",
    "id" : "8E3F40E6",
    "lastKnownWriteTime" : 1490191243,
    "last_content_update" : 1490191243994,
    "path" : "C:/Eigene_Dateien/AaLehre/BWS_StatGrow/Prognaus_R/PrognausBaseSV/R/Comp.R",
    "project_path" : "R/Comp.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}